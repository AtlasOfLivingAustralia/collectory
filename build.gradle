buildscript {
    version "5.1.1"
    group "au.org.ala"
}

plugins {
    id "groovy"
    id "org.grails.grails-gsp"
    id "org.grails.grails-web"
    id "com.github.erdi.webdriver-binaries" version "3.0"
    id "war"
    id "idea"
    id "com.bertramlabs.asset-pipeline"
    id "application"
    id "eclipse"

    id "com.gorylenko.gradle-git-properties" version "2.4.1"

    id "maven-publish"
}

publishing {
    targetCompatibility = 1.11
    repositories {
        maven {
            name 'Nexus'
            url "https://nexus.ala.org.au/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}"
            credentials {
                username = System.getenv('TRAVIS_DEPLOY_USERNAME')
                password = System.getenv('TRAVIS_DEPLOY_PASSWORD')
            }
        }
    }
    publications {
        mavenJar(MavenPublication) {
            artifact bootWar
        }
    }
}

bootWar {
    launchScript()
    dependsOn(compileGroovyPages)
}

war {
    dependsOn(compileGroovyPages)
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core/" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

sourceSets {
    main {
        resources {
            srcDir 'grails-app/migrations'
        }
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:events"
    implementation "org.grails.plugins:hibernate5"
    implementation("org.hibernate:hibernate-core:5.6.15.Final")
    implementation "org.grails.plugins:gsp"

    implementation "com.opencsv:opencsv:3.7"
    implementation "io.micronaut:micronaut-http-client"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    implementation "io.reactivex.rxjava3:rxjava:3.1.6"
    implementation "org.apache.httpcomponents:httpclient:4.5.13"
    implementation "commons-io:commons-io:2.11.0"

    // See: https://github.com/AtlasOfLivingAustralia/collectory/issues/84#issuecomment-1070670979
    // before updating mysql-connector-java
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation "org.grails.plugins:ala-bootstrap3:4.4.0"
    implementation "au.org.ala.plugins.grails:ala-charts-plugin:2.3.0"
    implementation "org.grails.plugins:ala-auth:$alaSecurityLibsVersion"
    implementation "org.grails.plugins:ala-ws-security-plugin:$alaSecurityLibsVersion"
    implementation "org.grails.plugins:ala-ws-plugin:$alaSecurityLibsVersion"
    implementation "org.grails.plugins:audit-logging:4.0.3"
    implementation 'dk.glasius:external-config:3.1.1'
    implementation "org.grails.plugins:ala-admin-plugin:2.3.0"
    implementation 'au.org.ala.plugins:openapi:1.3.0'

    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtimeOnly "org.glassfish.web:el-impl:2.1.2-b03"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:4.3.0"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"
//    testImplementation "org.grails.plugins:geb"
//    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
//    testImplementation "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
//    testImplementation "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
//    runtimeOnly "net.sourceforge.htmlunit:htmlunit:2.18"
//    testImplementation "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
//    testImplementation "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
//    testImplementation "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
//    testImplementation "org.seleniumhq.selenium:selenium-safari-driver:$seleniumSafariDriverVersion"
    implementation 'org.grails.plugins:sentry:11.7.25'
    // db-migration
    implementation 'org.liquibase:liquibase-core:4.20.0'
    implementation('org.grails.plugins:database-migration:4.2.0') {
        // spring-boot-cli exclusion required since Grails5 upgrade to prevent NullPointerException Error:  https://github.com/grails/grails-database-migration/issues/268
        exclude module: 'spring-boot-cli'
    }
}

bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx2048m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
//
//tasks.withType(Test) {
//    systemProperty "geb.env", System.getProperty('geb.env')
//    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
//    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
//    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
//}
//
//webdriverBinaries {
//    chromedriver "$chromeDriverVersion"
//    geckodriver "$geckodriverVersion"
//}

assets {
    minifyJs = true
    minifyCss = true
}

test {
    testLogging.showStandardStreams = true
}

